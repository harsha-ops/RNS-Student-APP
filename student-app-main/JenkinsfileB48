pipeline {
    
    agent {
        label "BuildServer"
    }
    
    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "maven3"
        git "git"
    }

    stages {
        stage('Pre-requisite') {
            steps {
                // Get some code from a GitHub repository
                git branch: 'main', credentialsId: 'gitlab_id', url: 'https://gitlab.com/rns-app/student-app.git'

                // Run Maven on a Unix agent.
                sh "mvn clean compile"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
            
        }
        
        stage('Pre-Deployment-Testing') {
            steps {
                
                sh "echo 1 | sudo -S alternatives --config java"
                sh "java -version"
               
                // Run Maven on a Unix agent.
                sh "mvn clean test"

                sh "echo 2 | sudo -S alternatives --config java"
                sh "java -version"
            }
            
            post{
                success {
                    junit 'target/surefire-reports/*.xml'
                }
            }
            
        }

        stage('Packaging-Application') {
            steps {                
                
                // Run Maven on a Unix agent.
                sh "mvn clean package -DskipTests"
            }
            
            post{
                success {
                    archiveArtifacts artifacts: '**/*.war', followSymlinks: false
                }
            }
            
        }

        stage('Update-DB-Schema') {
            steps {                
                
                // Run Maven on a Unix agent.
                ansiblePlaybook become: true, becomeUser: 'devops', installation: 'ansible', inventory: 'ansible/hosts', playbook: 'ansible/create_db_schema.yml', vaultTmpPath: ''
            }         
            
            
        }

        stage('Deploy-Application') {
            steps {                
                
                sh "cp target/studentapp-*.war ansible/files/student.war"

                // Run Maven on a Unix agent.
                ansiblePlaybook become: true, becomeUser: 'devops', installation: 'ansible', inventory: 'ansible/hosts', playbook: 'ansible/deploy_war_file_tomcat.yml', vaultTmpPath: ''
            }         
            
            
        }
    }
}
